var cov_11bi64lr6x=function(){var path="C:\\Users\\Paco\\bootcamp\\collab\\skylab-bootcamp-201809\\staff\\francisco-fernandez\\lets-talk\\lets-talk-api\\logic\\index.js",hash="73090c1b3eb086d08fdb19a406aa5d58aa4a97ad",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"C:\\Users\\Paco\\bootcamp\\collab\\skylab-bootcamp-201809\\staff\\francisco-fernandez\\lets-talk\\lets-talk-api\\logic\\index.js",statementMap:{"0":{start:{line:1,column:48},end:{line:1,column:73}},"1":{start:{line:2,column:74},end:{line:2,column:94}},"2":{start:{line:3,column:17},end:{line:3,column:45}},"3":{start:{line:4,column:19},end:{line:4,column:40}},"4":{start:{line:8,column:0},end:{line:12,column:2}},"5":{start:{line:14,column:14},end:{line:687,column:1}},"6":{start:{line:26,column:8},end:{line:44,column:10}},"7":{start:{line:27,column:12},end:{line:27,column:100}},"8":{start:{line:27,column:49},end:{line:27,column:100}},"9":{start:{line:29,column:12},end:{line:43,column:14}},"10":{start:{line:30,column:16},end:{line:42,column:18}},"11":{start:{line:31,column:20},end:{line:31,column:47}},"12":{start:{line:31,column:29},end:{line:31,column:47}},"13":{start:{line:33,column:20},end:{line:39,column:26}},"14":{start:{line:41,column:20},end:{line:41,column:37}},"15":{start:{line:66,column:8},end:{line:75,column:64}},"16":{start:{line:77,column:8},end:{line:87,column:12}},"17":{start:{line:78,column:23},end:{line:78,column:55}},"18":{start:{line:80,column:12},end:{line:80,column:93}},"19":{start:{line:80,column:22},end:{line:80,column:93}},"20":{start:{line:82,column:26},end:{line:82,column:36}},"21":{start:{line:84,column:12},end:{line:84,column:129}},"22":{start:{line:86,column:12},end:{line:86,column:29}},"23":{start:{line:100,column:8},end:{line:100,column:122}},"24":{start:{line:102,column:8},end:{line:108,column:12}},"25":{start:{line:103,column:25},end:{line:103,column:57}},"26":{start:{line:105,column:12},end:{line:105,column:104}},"27":{start:{line:105,column:53},end:{line:105,column:104}},"28":{start:{line:107,column:12},end:{line:107,column:26}},"29":{start:{line:121,column:8},end:{line:121,column:58}},"30":{start:{line:122,column:19},end:{line:122,column:28}},"31":{start:{line:123,column:8},end:{line:135,column:12}},"32":{start:{line:124,column:12},end:{line:128,column:13}},"33":{start:{line:125,column:16},end:{line:125,column:88}},"34":{start:{line:130,column:12},end:{line:130,column:78}},"35":{start:{line:130,column:23},end:{line:130,column:78}},"36":{start:{line:132,column:12},end:{line:132,column:24}},"37":{start:{line:134,column:12},end:{line:134,column:23}},"38":{start:{line:148,column:8},end:{line:148,column:58}},"39":{start:{line:150,column:8},end:{line:156,column:12}},"40":{start:{line:151,column:25},end:{line:151,column:222}},"41":{start:{line:153,column:12},end:{line:153,column:78}},"42":{start:{line:153,column:23},end:{line:153,column:78}},"43":{start:{line:155,column:12},end:{line:155,column:23}},"44":{start:{line:183,column:8},end:{line:197,column:10}},"45":{start:{line:199,column:8},end:{line:239,column:12}},"46":{start:{line:201,column:25},end:{line:201,column:48}},"47":{start:{line:203,column:12},end:{line:203,column:78}},"48":{start:{line:203,column:23},end:{line:203,column:78}},"49":{start:{line:205,column:12},end:{line:205,column:83}},"50":{start:{line:205,column:44},end:{line:205,column:83}},"51":{start:{line:207,column:12},end:{line:207,column:98}},"52":{start:{line:207,column:46},end:{line:207,column:98}},"53":{start:{line:209,column:12},end:{line:238,column:13}},"54":{start:{line:210,column:30},end:{line:210,column:62}},"55":{start:{line:212,column:16},end:{line:212,column:94}},"56":{start:{line:212,column:27},end:{line:212,column:94}},"57":{start:{line:214,column:16},end:{line:214,column:50}},"58":{start:{line:215,column:16},end:{line:215,column:59}},"59":{start:{line:216,column:16},end:{line:216,column:40}},"60":{start:{line:217,column:16},end:{line:217,column:68}},"61":{start:{line:218,column:16},end:{line:218,column:47}},"62":{start:{line:219,column:16},end:{line:219,column:47}},"63":{start:{line:220,column:16},end:{line:220,column:50}},"64":{start:{line:221,column:16},end:{line:221,column:74}},"65":{start:{line:222,column:16},end:{line:222,column:68}},"66":{start:{line:223,column:16},end:{line:223,column:68}},"67":{start:{line:225,column:16},end:{line:225,column:33}},"68":{start:{line:227,column:16},end:{line:227,column:50}},"69":{start:{line:228,column:16},end:{line:228,column:59}},"70":{start:{line:229,column:16},end:{line:229,column:68}},"71":{start:{line:230,column:16},end:{line:230,column:47}},"72":{start:{line:231,column:16},end:{line:231,column:47}},"73":{start:{line:232,column:16},end:{line:232,column:50}},"74":{start:{line:233,column:16},end:{line:233,column:74}},"75":{start:{line:234,column:16},end:{line:234,column:68}},"76":{start:{line:235,column:16},end:{line:235,column:68}},"77":{start:{line:237,column:16},end:{line:237,column:33}},"78":{start:{line:253,column:8},end:{line:256,column:10}},"79":{start:{line:258,column:8},end:{line:282,column:12}},"80":{start:{line:260,column:12},end:{line:260,column:99}},"81":{start:{line:260,column:34},end:{line:260,column:99}},"82":{start:{line:262,column:25},end:{line:262,column:48}},"83":{start:{line:264,column:12},end:{line:264,column:78}},"84":{start:{line:264,column:23},end:{line:264,column:78}},"85":{start:{line:266,column:31},end:{line:266,column:61}},"86":{start:{line:268,column:12},end:{line:268,column:91}},"87":{start:{line:268,column:29},end:{line:268,column:91}},"88":{start:{line:272,column:12},end:{line:275,column:14}},"89":{start:{line:274,column:16},end:{line:274,column:165}},"90":{start:{line:274,column:73},end:{line:274,column:165}},"91":{start:{line:277,column:12},end:{line:277,column:46}},"92":{start:{line:278,column:12},end:{line:278,column:46}},"93":{start:{line:280,column:12},end:{line:280,column:29}},"94":{start:{line:281,column:12},end:{line:281,column:35}},"95":{start:{line:294,column:8},end:{line:296,column:10}},"96":{start:{line:298,column:8},end:{line:324,column:12}},"97":{start:{line:299,column:23},end:{line:299,column:32}},"98":{start:{line:301,column:12},end:{line:306,column:13}},"99":{start:{line:302,column:16},end:{line:302,column:50}},"100":{start:{line:308,column:12},end:{line:308,column:82}},"101":{start:{line:308,column:23},end:{line:308,column:82}},"102":{start:{line:310,column:29},end:{line:310,column:116}},"103":{start:{line:310,column:84},end:{line:310,column:114}},"104":{start:{line:312,column:12},end:{line:321,column:14}},"105":{start:{line:313,column:16},end:{line:316,column:18}},"106":{start:{line:315,column:20},end:{line:315,column:68}},"107":{start:{line:315,column:43},end:{line:315,column:68}},"108":{start:{line:317,column:16},end:{line:320,column:18}},"109":{start:{line:319,column:20},end:{line:319,column:72}},"110":{start:{line:319,column:47},end:{line:319,column:72}},"111":{start:{line:323,column:12},end:{line:323,column:109}},"112":{start:{line:323,column:73},end:{line:323,column:107}},"113":{start:{line:340,column:8},end:{line:344,column:10}},"114":{start:{line:345,column:8},end:{line:373,column:12}},"115":{start:{line:346,column:24},end:{line:346,column:33}},"116":{start:{line:347,column:24},end:{line:347,column:33}},"117":{start:{line:348,column:12},end:{line:353,column:13}},"118":{start:{line:349,column:16},end:{line:349,column:49}},"119":{start:{line:355,column:12},end:{line:355,column:81}},"120":{start:{line:355,column:24},end:{line:355,column:81}},"121":{start:{line:357,column:12},end:{line:361,column:13}},"122":{start:{line:358,column:16},end:{line:358,column:51}},"123":{start:{line:363,column:12},end:{line:363,column:83}},"124":{start:{line:363,column:24},end:{line:363,column:83}},"125":{start:{line:365,column:12},end:{line:365,column:153}},"126":{start:{line:365,column:63},end:{line:365,column:153}},"127":{start:{line:367,column:27},end:{line:367,column:37}},"128":{start:{line:368,column:12},end:{line:368,column:113}},"129":{start:{line:370,column:12},end:{line:370,column:32}},"130":{start:{line:389,column:8},end:{line:392,column:10}},"131":{start:{line:393,column:8},end:{line:430,column:12}},"132":{start:{line:395,column:27},end:{line:395,column:53}},"133":{start:{line:397,column:12},end:{line:397,column:84}},"134":{start:{line:397,column:25},end:{line:397,column:84}},"135":{start:{line:399,column:27},end:{line:399,column:53}},"136":{start:{line:401,column:12},end:{line:401,column:83}},"137":{start:{line:401,column:25},end:{line:401,column:83}},"138":{start:{line:403,column:12},end:{line:403,column:155}},"139":{start:{line:403,column:65},end:{line:403,column:155}},"140":{start:{line:405,column:27},end:{line:405,column:50}},"141":{start:{line:406,column:27},end:{line:409,column:14}},"142":{start:{line:411,column:12},end:{line:413,column:14}},"143":{start:{line:412,column:16},end:{line:412,column:48}},"144":{start:{line:415,column:12},end:{line:425,column:17}},"145":{start:{line:416,column:16},end:{line:425,column:17}},"146":{start:{line:417,column:34},end:{line:417,column:101}},"147":{start:{line:420,column:20},end:{line:420,column:45}},"148":{start:{line:422,column:20},end:{line:422,column:40}},"149":{start:{line:427,column:12},end:{line:428,column:28}},"150":{start:{line:427,column:37},end:{line:427,column:146}},"151":{start:{line:427,column:104},end:{line:427,column:144}},"152":{start:{line:428,column:17},end:{line:428,column:28}},"153":{start:{line:444,column:8},end:{line:447,column:10}},"154":{start:{line:448,column:8},end:{line:473,column:12}},"155":{start:{line:450,column:27},end:{line:450,column:53}},"156":{start:{line:452,column:12},end:{line:452,column:84}},"157":{start:{line:452,column:25},end:{line:452,column:84}},"158":{start:{line:454,column:27},end:{line:454,column:53}},"159":{start:{line:456,column:12},end:{line:456,column:83}},"160":{start:{line:456,column:25},end:{line:456,column:83}},"161":{start:{line:458,column:12},end:{line:458,column:155}},"162":{start:{line:458,column:65},end:{line:458,column:155}},"163":{start:{line:460,column:27},end:{line:460,column:50}},"164":{start:{line:461,column:27},end:{line:464,column:14}},"165":{start:{line:466,column:12},end:{line:468,column:14}},"166":{start:{line:467,column:16},end:{line:467,column:48}},"167":{start:{line:470,column:12},end:{line:471,column:28}},"168":{start:{line:470,column:37},end:{line:470,column:146}},"169":{start:{line:470,column:104},end:{line:470,column:144}},"170":{start:{line:471,column:17},end:{line:471,column:28}},"171":{start:{line:487,column:8},end:{line:487,column:62}},"172":{start:{line:489,column:8},end:{line:519,column:12}},"173":{start:{line:491,column:26},end:{line:491,column:51}},"174":{start:{line:493,column:12},end:{line:493,column:82}},"175":{start:{line:493,column:24},end:{line:493,column:82}},"176":{start:{line:495,column:29},end:{line:495,column:91}},"177":{start:{line:497,column:27},end:{line:497,column:29}},"178":{start:{line:500,column:12},end:{line:515,column:14}},"179":{start:{line:501,column:27},end:{line:501,column:32}},"180":{start:{line:503,column:16},end:{line:503,column:48}},"181":{start:{line:505,column:16},end:{line:507,column:18}},"182":{start:{line:506,column:20},end:{line:506,column:54}},"183":{start:{line:506,column:43},end:{line:506,column:54}},"184":{start:{line:509,column:16},end:{line:512,column:18}},"185":{start:{line:510,column:20},end:{line:510,column:56}},"186":{start:{line:510,column:45},end:{line:510,column:56}},"187":{start:{line:514,column:16},end:{line:514,column:51}},"188":{start:{line:514,column:34},end:{line:514,column:51}},"189":{start:{line:517,column:12},end:{line:517,column:27}},"190":{start:{line:534,column:8},end:{line:536,column:10}},"191":{start:{line:538,column:35},end:{line:538,column:37}},"192":{start:{line:540,column:19},end:{line:540,column:24}},"193":{start:{line:543,column:8},end:{line:605,column:12}},"194":{start:{line:545,column:26},end:{line:545,column:51}},"195":{start:{line:547,column:12},end:{line:547,column:81}},"196":{start:{line:547,column:24},end:{line:547,column:81}},"197":{start:{line:549,column:28},end:{line:549,column:30}},"198":{start:{line:551,column:12},end:{line:552,column:35}},"199":{start:{line:551,column:38},end:{line:551,column:58}},"200":{start:{line:552,column:17},end:{line:552,column:35}},"201":{start:{line:554,column:23},end:{line:554,column:33}},"202":{start:{line:556,column:29},end:{line:556,column:43}},"203":{start:{line:558,column:29},end:{line:558,column:139}},"204":{start:{line:560,column:12},end:{line:574,column:14}},"205":{start:{line:561,column:16},end:{line:567,column:18}},"206":{start:{line:563,column:20},end:{line:565,column:21}},"207":{start:{line:564,column:24},end:{line:564,column:35}},"208":{start:{line:568,column:16},end:{line:572,column:17}},"209":{start:{line:568,column:35},end:{line:568,column:47}},"210":{start:{line:570,column:20},end:{line:570,column:54}},"211":{start:{line:571,column:20},end:{line:571,column:32}},"212":{start:{line:576,column:12},end:{line:578,column:14}},"213":{start:{line:577,column:16},end:{line:577,column:46}},"214":{start:{line:580,column:12},end:{line:599,column:14}},"215":{start:{line:581,column:16},end:{line:581,column:55}},"216":{start:{line:583,column:16},end:{line:583,column:36}},"217":{start:{line:584,column:16},end:{line:584,column:36}},"218":{start:{line:585,column:16},end:{line:585,column:41}},"219":{start:{line:586,column:16},end:{line:586,column:37}},"220":{start:{line:587,column:16},end:{line:587,column:40}},"221":{start:{line:588,column:16},end:{line:588,column:40}},"222":{start:{line:589,column:16},end:{line:589,column:41}},"223":{start:{line:590,column:16},end:{line:590,column:41}},"224":{start:{line:591,column:16},end:{line:591,column:36}},"225":{start:{line:592,column:16},end:{line:592,column:36}},"226":{start:{line:593,column:16},end:{line:593,column:43}},"227":{start:{line:594,column:16},end:{line:594,column:43}},"228":{start:{line:595,column:16},end:{line:595,column:39}},"229":{start:{line:596,column:16},end:{line:596,column:39}},"230":{start:{line:597,column:16},end:{line:597,column:39}},"231":{start:{line:602,column:12},end:{line:603,column:29}},"232":{start:{line:602,column:47},end:{line:602,column:72}},"233":{start:{line:603,column:17},end:{line:603,column:29}},"234":{start:{line:618,column:8},end:{line:622,column:10}},"235":{start:{line:624,column:8},end:{line:641,column:12}},"236":{start:{line:626,column:25},end:{line:626,column:48}},"237":{start:{line:628,column:12},end:{line:628,column:78}},"238":{start:{line:628,column:23},end:{line:628,column:78}},"239":{start:{line:630,column:36},end:{line:630,column:64}},"240":{start:{line:632,column:12},end:{line:634,column:46}},"241":{start:{line:632,column:36},end:{line:632,column:65}},"242":{start:{line:633,column:17},end:{line:634,column:46}},"243":{start:{line:633,column:41},end:{line:633,column:70}},"244":{start:{line:634,column:17},end:{line:634,column:46}},"245":{start:{line:637,column:12},end:{line:637,column:29}},"246":{start:{line:639,column:12},end:{line:639,column:34}},"247":{start:{line:656,column:8},end:{line:659,column:10}},"248":{start:{line:661,column:8},end:{line:683,column:12}},"249":{start:{line:663,column:12},end:{line:663,column:98}},"250":{start:{line:663,column:33},end:{line:663,column:98}},"251":{start:{line:665,column:25},end:{line:665,column:51}},"252":{start:{line:667,column:12},end:{line:667,column:81}},"253":{start:{line:667,column:23},end:{line:667,column:81}},"254":{start:{line:669,column:35},end:{line:669,column:61}},"255":{start:{line:671,column:12},end:{line:671,column:91}},"256":{start:{line:671,column:33},end:{line:671,column:91}},"257":{start:{line:673,column:12},end:{line:675,column:14}},"258":{start:{line:674,column:16},end:{line:674,column:122}},"259":{start:{line:674,column:41},end:{line:674,column:122}},"260":{start:{line:677,column:12},end:{line:677,column:35}},"261":{start:{line:678,column:12},end:{line:678,column:48}},"262":{start:{line:680,column:12},end:{line:680,column:29}},"263":{start:{line:681,column:12},end:{line:681,column:39}},"264":{start:{line:689,column:0},end:{line:689,column:22}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:25,column:4},end:{line:25,column:5}},loc:{start:{line:25,column:28},end:{line:45,column:5}},line:25},"1":{name:"(anonymous_1)",decl:{start:{line:26,column:38},end:{line:26,column:39}},loc:{start:{line:26,column:44},end:{line:44,column:9}},line:26},"2":{name:"(anonymous_2)",decl:{start:{line:29,column:31},end:{line:29,column:32}},loc:{start:{line:29,column:52},end:{line:43,column:13}},line:29},"3":{name:"(anonymous_3)",decl:{start:{line:30,column:66},end:{line:30,column:67}},loc:{start:{line:30,column:87},end:{line:42,column:17}},line:30},"4":{name:"(anonymous_4)",decl:{start:{line:64,column:4},end:{line:64,column:5}},loc:{start:{line:64,column:106},end:{line:88,column:5}},line:64},"5":{name:"(anonymous_5)",decl:{start:{line:77,column:16},end:{line:77,column:17}},loc:{start:{line:77,column:28},end:{line:87,column:9}},line:77},"6":{name:"(anonymous_6)",decl:{start:{line:99,column:4},end:{line:99,column:5}},loc:{start:{line:99,column:41},end:{line:109,column:5}},line:99},"7":{name:"(anonymous_7)",decl:{start:{line:102,column:16},end:{line:102,column:17}},loc:{start:{line:102,column:28},end:{line:108,column:9}},line:102},"8":{name:"(anonymous_8)",decl:{start:{line:120,column:4},end:{line:120,column:5}},loc:{start:{line:120,column:21},end:{line:136,column:5}},line:120},"9":{name:"(anonymous_9)",decl:{start:{line:123,column:16},end:{line:123,column:17}},loc:{start:{line:123,column:28},end:{line:135,column:9}},line:123},"10":{name:"(anonymous_10)",decl:{start:{line:147,column:4},end:{line:147,column:5}},loc:{start:{line:147,column:27},end:{line:158,column:5}},line:147},"11":{name:"(anonymous_11)",decl:{start:{line:150,column:16},end:{line:150,column:17}},loc:{start:{line:150,column:28},end:{line:156,column:9}},line:150},"12":{name:"(anonymous_12)",decl:{start:{line:181,column:4},end:{line:181,column:5}},loc:{start:{line:181,column:135},end:{line:240,column:5}},line:181},"13":{name:"(anonymous_13)",decl:{start:{line:199,column:16},end:{line:199,column:17}},loc:{start:{line:199,column:28},end:{line:239,column:9}},line:199},"14":{name:"(anonymous_14)",decl:{start:{line:252,column:4},end:{line:252,column:5}},loc:{start:{line:252,column:30},end:{line:283,column:5}},line:252},"15":{name:"(anonymous_15)",decl:{start:{line:258,column:16},end:{line:258,column:17}},loc:{start:{line:258,column:28},end:{line:282,column:9}},line:258},"16":{name:"(anonymous_16)",decl:{start:{line:272,column:34},end:{line:272,column:35}},loc:{start:{line:272,column:48},end:{line:275,column:13}},line:272},"17":{name:"(anonymous_17)",decl:{start:{line:293,column:4},end:{line:293,column:5}},loc:{start:{line:293,column:25},end:{line:326,column:5}},line:293},"18":{name:"(anonymous_18)",decl:{start:{line:298,column:16},end:{line:298,column:17}},loc:{start:{line:298,column:28},end:{line:324,column:9}},line:298},"19":{name:"(anonymous_19)",decl:{start:{line:310,column:65},end:{line:310,column:66}},loc:{start:{line:310,column:84},end:{line:310,column:114}},line:310},"20":{name:"(anonymous_20)",decl:{start:{line:312,column:29},end:{line:312,column:30}},loc:{start:{line:312,column:49},end:{line:321,column:13}},line:312},"21":{name:"(anonymous_21)",decl:{start:{line:313,column:36},end:{line:313,column:37}},loc:{start:{line:313,column:42},end:{line:316,column:17}},line:313},"22":{name:"(anonymous_22)",decl:{start:{line:317,column:42},end:{line:317,column:43}},loc:{start:{line:317,column:55},end:{line:320,column:17}},line:317},"23":{name:"(anonymous_23)",decl:{start:{line:323,column:32},end:{line:323,column:33}},loc:{start:{line:323,column:73},end:{line:323,column:107}},line:323},"24":{name:"(anonymous_24)",decl:{start:{line:339,column:4},end:{line:339,column:5}},loc:{start:{line:339,column:35},end:{line:375,column:5}},line:339},"25":{name:"(anonymous_25)",decl:{start:{line:345,column:16},end:{line:345,column:17}},loc:{start:{line:345,column:28},end:{line:373,column:9}},line:345},"26":{name:"(anonymous_26)",decl:{start:{line:387,column:4},end:{line:387,column:5}},loc:{start:{line:387,column:35},end:{line:431,column:5}},line:387},"27":{name:"(anonymous_27)",decl:{start:{line:393,column:16},end:{line:393,column:17}},loc:{start:{line:393,column:28},end:{line:430,column:9}},line:393},"28":{name:"(anonymous_28)",decl:{start:{line:411,column:26},end:{line:411,column:27}},loc:{start:{line:411,column:42},end:{line:413,column:13}},line:411},"29":{name:"(anonymous_29)",decl:{start:{line:427,column:57},end:{line:427,column:58}},loc:{start:{line:427,column:104},end:{line:427,column:144}},line:427},"30":{name:"(anonymous_30)",decl:{start:{line:442,column:4},end:{line:442,column:5}},loc:{start:{line:442,column:32},end:{line:474,column:5}},line:442},"31":{name:"(anonymous_31)",decl:{start:{line:448,column:16},end:{line:448,column:17}},loc:{start:{line:448,column:28},end:{line:473,column:9}},line:448},"32":{name:"(anonymous_32)",decl:{start:{line:466,column:26},end:{line:466,column:27}},loc:{start:{line:466,column:42},end:{line:468,column:13}},line:466},"33":{name:"(anonymous_33)",decl:{start:{line:470,column:57},end:{line:470,column:58}},loc:{start:{line:470,column:104},end:{line:470,column:144}},line:470},"34":{name:"(anonymous_34)",decl:{start:{line:485,column:4},end:{line:485,column:5}},loc:{start:{line:485,column:27},end:{line:521,column:5}},line:485},"35":{name:"(anonymous_35)",decl:{start:{line:489,column:16},end:{line:489,column:17}},loc:{start:{line:489,column:28},end:{line:519,column:9}},line:489},"36":{name:"(anonymous_36)",decl:{start:{line:500,column:29},end:{line:500,column:30}},loc:{start:{line:500,column:40},end:{line:515,column:13}},line:500},"37":{name:"(anonymous_37)",decl:{start:{line:505,column:37},end:{line:505,column:38}},loc:{start:{line:505,column:52},end:{line:507,column:17}},line:505},"38":{name:"(anonymous_38)",decl:{start:{line:509,column:40},end:{line:509,column:41}},loc:{start:{line:509,column:56},end:{line:512,column:17}},line:509},"39":{name:"(anonymous_39)",decl:{start:{line:532,column:4},end:{line:532,column:5}},loc:{start:{line:532,column:25},end:{line:606,column:5}},line:532},"40":{name:"(anonymous_40)",decl:{start:{line:543,column:16},end:{line:543,column:17}},loc:{start:{line:543,column:28},end:{line:605,column:9}},line:543},"41":{name:"(anonymous_41)",decl:{start:{line:560,column:31},end:{line:560,column:32}},loc:{start:{line:560,column:44},end:{line:574,column:13}},line:560},"42":{name:"(anonymous_42)",decl:{start:{line:561,column:33},end:{line:561,column:34}},loc:{start:{line:561,column:44},end:{line:567,column:17}},line:561},"43":{name:"(anonymous_43)",decl:{start:{line:576,column:36},end:{line:576,column:37}},loc:{start:{line:576,column:52},end:{line:578,column:13}},line:576},"44":{name:"(anonymous_44)",decl:{start:{line:580,column:39},end:{line:580,column:40}},loc:{start:{line:580,column:52},end:{line:599,column:13}},line:580},"45":{name:"(anonymous_45)",decl:{start:{line:616,column:4},end:{line:616,column:5}},loc:{start:{line:616,column:34},end:{line:643,column:5}},line:616},"46":{name:"(anonymous_46)",decl:{start:{line:624,column:16},end:{line:624,column:17}},loc:{start:{line:624,column:28},end:{line:641,column:9}},line:624},"47":{name:"(anonymous_47)",decl:{start:{line:655,column:4},end:{line:655,column:5}},loc:{start:{line:655,column:28},end:{line:684,column:5}},line:655},"48":{name:"(anonymous_48)",decl:{start:{line:661,column:16},end:{line:661,column:17}},loc:{start:{line:661,column:28},end:{line:683,column:9}},line:661},"49":{name:"(anonymous_49)",decl:{start:{line:673,column:32},end:{line:673,column:33}},loc:{start:{line:673,column:45},end:{line:675,column:13}},line:673}},branchMap:{"0":{loc:{start:{line:27,column:12},end:{line:27,column:100}},type:"if",locations:[{start:{line:27,column:12},end:{line:27,column:100}},{start:{line:27,column:12},end:{line:27,column:100}}],line:27},"1":{loc:{start:{line:31,column:20},end:{line:31,column:47}},type:"if",locations:[{start:{line:31,column:20},end:{line:31,column:47}},{start:{line:31,column:20},end:{line:31,column:47}}],line:31},"2":{loc:{start:{line:80,column:12},end:{line:80,column:93}},type:"if",locations:[{start:{line:80,column:12},end:{line:80,column:93}},{start:{line:80,column:12},end:{line:80,column:93}}],line:80},"3":{loc:{start:{line:105,column:12},end:{line:105,column:104}},type:"if",locations:[{start:{line:105,column:12},end:{line:105,column:104}},{start:{line:105,column:12},end:{line:105,column:104}}],line:105},"4":{loc:{start:{line:105,column:16},end:{line:105,column:51}},type:"binary-expr",locations:[{start:{line:105,column:16},end:{line:105,column:21}},{start:{line:105,column:25},end:{line:105,column:51}}],line:105},"5":{loc:{start:{line:130,column:12},end:{line:130,column:78}},type:"if",locations:[{start:{line:130,column:12},end:{line:130,column:78}},{start:{line:130,column:12},end:{line:130,column:78}}],line:130},"6":{loc:{start:{line:153,column:12},end:{line:153,column:78}},type:"if",locations:[{start:{line:153,column:12},end:{line:153,column:78}},{start:{line:153,column:12},end:{line:153,column:78}}],line:153},"7":{loc:{start:{line:203,column:12},end:{line:203,column:78}},type:"if",locations:[{start:{line:203,column:12},end:{line:203,column:78}},{start:{line:203,column:12},end:{line:203,column:78}}],line:203},"8":{loc:{start:{line:205,column:12},end:{line:205,column:83}},type:"if",locations:[{start:{line:205,column:12},end:{line:205,column:83}},{start:{line:205,column:12},end:{line:205,column:83}}],line:205},"9":{loc:{start:{line:207,column:12},end:{line:207,column:98}},type:"if",locations:[{start:{line:207,column:12},end:{line:207,column:98}},{start:{line:207,column:12},end:{line:207,column:98}}],line:207},"10":{loc:{start:{line:209,column:12},end:{line:238,column:13}},type:"if",locations:[{start:{line:209,column:12},end:{line:238,column:13}},{start:{line:209,column:12},end:{line:238,column:13}}],line:209},"11":{loc:{start:{line:209,column:16},end:{line:209,column:54}},type:"binary-expr",locations:[{start:{line:209,column:16},end:{line:209,column:24}},{start:{line:209,column:28},end:{line:209,column:54}}],line:209},"12":{loc:{start:{line:212,column:16},end:{line:212,column:94}},type:"if",locations:[{start:{line:212,column:16},end:{line:212,column:94}},{start:{line:212,column:16},end:{line:212,column:94}}],line:212},"13":{loc:{start:{line:214,column:16},end:{line:214,column:50}},type:"binary-expr",locations:[{start:{line:214,column:16},end:{line:214,column:28}},{start:{line:214,column:33},end:{line:214,column:49}}],line:214},"14":{loc:{start:{line:215,column:16},end:{line:215,column:59}},type:"binary-expr",locations:[{start:{line:215,column:16},end:{line:215,column:31}},{start:{line:215,column:36},end:{line:215,column:58}}],line:215},"15":{loc:{start:{line:217,column:16},end:{line:217,column:68}},type:"binary-expr",locations:[{start:{line:217,column:16},end:{line:217,column:35}},{start:{line:217,column:40},end:{line:217,column:67}}],line:217},"16":{loc:{start:{line:218,column:16},end:{line:218,column:47}},type:"binary-expr",locations:[{start:{line:218,column:16},end:{line:218,column:27}},{start:{line:218,column:32},end:{line:218,column:46}}],line:218},"17":{loc:{start:{line:219,column:16},end:{line:219,column:47}},type:"binary-expr",locations:[{start:{line:219,column:16},end:{line:219,column:27}},{start:{line:219,column:32},end:{line:219,column:46}}],line:219},"18":{loc:{start:{line:220,column:16},end:{line:220,column:50}},type:"binary-expr",locations:[{start:{line:220,column:16},end:{line:220,column:28}},{start:{line:220,column:33},end:{line:220,column:49}}],line:220},"19":{loc:{start:{line:221,column:16},end:{line:221,column:74}},type:"binary-expr",locations:[{start:{line:221,column:16},end:{line:221,column:36}},{start:{line:221,column:41},end:{line:221,column:73}}],line:221},"20":{loc:{start:{line:222,column:16},end:{line:222,column:68}},type:"binary-expr",locations:[{start:{line:222,column:16},end:{line:222,column:34}},{start:{line:222,column:39},end:{line:222,column:67}}],line:222},"21":{loc:{start:{line:223,column:16},end:{line:223,column:68}},type:"binary-expr",locations:[{start:{line:223,column:16},end:{line:223,column:34}},{start:{line:223,column:39},end:{line:223,column:67}}],line:223},"22":{loc:{start:{line:227,column:16},end:{line:227,column:50}},type:"binary-expr",locations:[{start:{line:227,column:16},end:{line:227,column:28}},{start:{line:227,column:33},end:{line:227,column:49}}],line:227},"23":{loc:{start:{line:228,column:16},end:{line:228,column:59}},type:"binary-expr",locations:[{start:{line:228,column:16},end:{line:228,column:31}},{start:{line:228,column:36},end:{line:228,column:58}}],line:228},"24":{loc:{start:{line:229,column:16},end:{line:229,column:68}},type:"binary-expr",locations:[{start:{line:229,column:16},end:{line:229,column:35}},{start:{line:229,column:40},end:{line:229,column:67}}],line:229},"25":{loc:{start:{line:230,column:16},end:{line:230,column:47}},type:"binary-expr",locations:[{start:{line:230,column:16},end:{line:230,column:27}},{start:{line:230,column:32},end:{line:230,column:46}}],line:230},"26":{loc:{start:{line:231,column:16},end:{line:231,column:47}},type:"binary-expr",locations:[{start:{line:231,column:16},end:{line:231,column:27}},{start:{line:231,column:32},end:{line:231,column:46}}],line:231},"27":{loc:{start:{line:232,column:16},end:{line:232,column:50}},type:"binary-expr",locations:[{start:{line:232,column:16},end:{line:232,column:28}},{start:{line:232,column:33},end:{line:232,column:49}}],line:232},"28":{loc:{start:{line:233,column:16},end:{line:233,column:74}},type:"binary-expr",locations:[{start:{line:233,column:16},end:{line:233,column:36}},{start:{line:233,column:41},end:{line:233,column:73}}],line:233},"29":{loc:{start:{line:234,column:16},end:{line:234,column:68}},type:"binary-expr",locations:[{start:{line:234,column:16},end:{line:234,column:34}},{start:{line:234,column:39},end:{line:234,column:67}}],line:234},"30":{loc:{start:{line:235,column:16},end:{line:235,column:68}},type:"binary-expr",locations:[{start:{line:235,column:16},end:{line:235,column:34}},{start:{line:235,column:39},end:{line:235,column:67}}],line:235},"31":{loc:{start:{line:260,column:12},end:{line:260,column:99}},type:"if",locations:[{start:{line:260,column:12},end:{line:260,column:99}},{start:{line:260,column:12},end:{line:260,column:99}}],line:260},"32":{loc:{start:{line:264,column:12},end:{line:264,column:78}},type:"if",locations:[{start:{line:264,column:12},end:{line:264,column:78}},{start:{line:264,column:12},end:{line:264,column:78}}],line:264},"33":{loc:{start:{line:268,column:12},end:{line:268,column:91}},type:"if",locations:[{start:{line:268,column:12},end:{line:268,column:91}},{start:{line:268,column:12},end:{line:268,column:91}}],line:268},"34":{loc:{start:{line:274,column:16},end:{line:274,column:165}},type:"if",locations:[{start:{line:274,column:16},end:{line:274,column:165}},{start:{line:274,column:16},end:{line:274,column:165}}],line:274},"35":{loc:{start:{line:308,column:12},end:{line:308,column:82}},type:"if",locations:[{start:{line:308,column:12},end:{line:308,column:82}},{start:{line:308,column:12},end:{line:308,column:82}}],line:308},"36":{loc:{start:{line:315,column:20},end:{line:315,column:68}},type:"if",locations:[{start:{line:315,column:20},end:{line:315,column:68}},{start:{line:315,column:20},end:{line:315,column:68}}],line:315},"37":{loc:{start:{line:319,column:20},end:{line:319,column:72}},type:"if",locations:[{start:{line:319,column:20},end:{line:319,column:72}},{start:{line:319,column:20},end:{line:319,column:72}}],line:319},"38":{loc:{start:{line:355,column:12},end:{line:355,column:81}},type:"if",locations:[{start:{line:355,column:12},end:{line:355,column:81}},{start:{line:355,column:12},end:{line:355,column:81}}],line:355},"39":{loc:{start:{line:363,column:12},end:{line:363,column:83}},type:"if",locations:[{start:{line:363,column:12},end:{line:363,column:83}},{start:{line:363,column:12},end:{line:363,column:83}}],line:363},"40":{loc:{start:{line:365,column:12},end:{line:365,column:153}},type:"if",locations:[{start:{line:365,column:12},end:{line:365,column:153}},{start:{line:365,column:12},end:{line:365,column:153}}],line:365},"41":{loc:{start:{line:397,column:12},end:{line:397,column:84}},type:"if",locations:[{start:{line:397,column:12},end:{line:397,column:84}},{start:{line:397,column:12},end:{line:397,column:84}}],line:397},"42":{loc:{start:{line:401,column:12},end:{line:401,column:83}},type:"if",locations:[{start:{line:401,column:12},end:{line:401,column:83}},{start:{line:401,column:12},end:{line:401,column:83}}],line:401},"43":{loc:{start:{line:403,column:12},end:{line:403,column:155}},type:"if",locations:[{start:{line:403,column:12},end:{line:403,column:155}},{start:{line:403,column:12},end:{line:403,column:155}}],line:403},"44":{loc:{start:{line:415,column:12},end:{line:425,column:17}},type:"if",locations:[{start:{line:415,column:12},end:{line:425,column:17}},{start:{line:415,column:12},end:{line:425,column:17}}],line:415},"45":{loc:{start:{line:416,column:16},end:{line:425,column:17}},type:"if",locations:[{start:{line:416,column:16},end:{line:425,column:17}},{start:{line:416,column:16},end:{line:425,column:17}}],line:416},"46":{loc:{start:{line:416,column:20},end:{line:416,column:129}},type:"binary-expr",locations:[{start:{line:416,column:20},end:{line:416,column:70}},{start:{line:416,column:74},end:{line:416,column:129}}],line:416},"47":{loc:{start:{line:427,column:12},end:{line:428,column:28}},type:"if",locations:[{start:{line:427,column:12},end:{line:428,column:28}},{start:{line:427,column:12},end:{line:428,column:28}}],line:427},"48":{loc:{start:{line:452,column:12},end:{line:452,column:84}},type:"if",locations:[{start:{line:452,column:12},end:{line:452,column:84}},{start:{line:452,column:12},end:{line:452,column:84}}],line:452},"49":{loc:{start:{line:456,column:12},end:{line:456,column:83}},type:"if",locations:[{start:{line:456,column:12},end:{line:456,column:83}},{start:{line:456,column:12},end:{line:456,column:83}}],line:456},"50":{loc:{start:{line:458,column:12},end:{line:458,column:155}},type:"if",locations:[{start:{line:458,column:12},end:{line:458,column:155}},{start:{line:458,column:12},end:{line:458,column:155}}],line:458},"51":{loc:{start:{line:470,column:12},end:{line:471,column:28}},type:"if",locations:[{start:{line:470,column:12},end:{line:471,column:28}},{start:{line:470,column:12},end:{line:471,column:28}}],line:470},"52":{loc:{start:{line:493,column:12},end:{line:493,column:82}},type:"if",locations:[{start:{line:493,column:12},end:{line:493,column:82}},{start:{line:493,column:12},end:{line:493,column:82}}],line:493},"53":{loc:{start:{line:506,column:20},end:{line:506,column:54}},type:"if",locations:[{start:{line:506,column:20},end:{line:506,column:54}},{start:{line:506,column:20},end:{line:506,column:54}}],line:506},"54":{loc:{start:{line:510,column:20},end:{line:510,column:56}},type:"if",locations:[{start:{line:510,column:20},end:{line:510,column:56}},{start:{line:510,column:20},end:{line:510,column:56}}],line:510},"55":{loc:{start:{line:514,column:16},end:{line:514,column:51}},type:"if",locations:[{start:{line:514,column:16},end:{line:514,column:51}},{start:{line:514,column:16},end:{line:514,column:51}}],line:514},"56":{loc:{start:{line:547,column:12},end:{line:547,column:81}},type:"if",locations:[{start:{line:547,column:12},end:{line:547,column:81}},{start:{line:547,column:12},end:{line:547,column:81}}],line:547},"57":{loc:{start:{line:551,column:12},end:{line:552,column:35}},type:"if",locations:[{start:{line:551,column:12},end:{line:552,column:35}},{start:{line:551,column:12},end:{line:552,column:35}}],line:551},"58":{loc:{start:{line:563,column:20},end:{line:565,column:21}},type:"if",locations:[{start:{line:563,column:20},end:{line:565,column:21}},{start:{line:563,column:20},end:{line:565,column:21}}],line:563},"59":{loc:{start:{line:568,column:16},end:{line:572,column:17}},type:"if",locations:[{start:{line:568,column:16},end:{line:572,column:17}},{start:{line:568,column:16},end:{line:572,column:17}}],line:568},"60":{loc:{start:{line:602,column:12},end:{line:603,column:29}},type:"if",locations:[{start:{line:602,column:12},end:{line:603,column:29}},{start:{line:602,column:12},end:{line:603,column:29}}],line:602},"61":{loc:{start:{line:628,column:12},end:{line:628,column:78}},type:"if",locations:[{start:{line:628,column:12},end:{line:628,column:78}},{start:{line:628,column:12},end:{line:628,column:78}}],line:628},"62":{loc:{start:{line:632,column:12},end:{line:634,column:46}},type:"if",locations:[{start:{line:632,column:12},end:{line:634,column:46}},{start:{line:632,column:12},end:{line:634,column:46}}],line:632},"63":{loc:{start:{line:633,column:17},end:{line:634,column:46}},type:"if",locations:[{start:{line:633,column:17},end:{line:634,column:46}},{start:{line:633,column:17},end:{line:634,column:46}}],line:633},"64":{loc:{start:{line:663,column:12},end:{line:663,column:98}},type:"if",locations:[{start:{line:663,column:12},end:{line:663,column:98}},{start:{line:663,column:12},end:{line:663,column:98}}],line:663},"65":{loc:{start:{line:667,column:12},end:{line:667,column:81}},type:"if",locations:[{start:{line:667,column:12},end:{line:667,column:81}},{start:{line:667,column:12},end:{line:667,column:81}}],line:667},"66":{loc:{start:{line:671,column:12},end:{line:671,column:91}},type:"if",locations:[{start:{line:671,column:12},end:{line:671,column:91}},{start:{line:671,column:12},end:{line:671,column:91}}],line:671},"67":{loc:{start:{line:674,column:16},end:{line:674,column:122}},type:"if",locations:[{start:{line:674,column:16},end:{line:674,column:122}},{start:{line:674,column:16},end:{line:674,column:122}}],line:674}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const{mongoose,models:{User,Message}}=(cov_11bi64lr6x.s[0]++,require('lets-talk-data'));const{AlreadyExistsError,AuthError,NotAllowedError,NotFoundError}=(cov_11bi64lr6x.s[1]++,require('../errors'));const validate=(cov_11bi64lr6x.s[2]++,require('../utils/validate'));const cloudinary=(cov_11bi64lr6x.s[3]++,require('cloudinary'));// const fs = require('fs')
// const path = require('path')
cov_11bi64lr6x.s[4]++;cloudinary.config({cloud_name:'skylab-paco',api_key:'398374729263247',api_secret:'8QwEJKmVzZU8T3ptAXWxycxGDm4'});const logic=(cov_11bi64lr6x.s[5]++,{/**
     * saveImage: upload a file in cloudinary
     * 
     * @param {string} base64Image 
     * 
     * @returns {string} data.url: the url with te image uploaded
     * 
     */_saveImage(base64Image){cov_11bi64lr6x.f[0]++;cov_11bi64lr6x.s[6]++;return Promise.resolve().then(()=>{cov_11bi64lr6x.f[1]++;cov_11bi64lr6x.s[7]++;if(typeof base64Image!=='string'){cov_11bi64lr6x.b[0][0]++;cov_11bi64lr6x.s[8]++;throw new LogicError('base64Image is not a string');}else{cov_11bi64lr6x.b[0][1]++;}cov_11bi64lr6x.s[9]++;return new Promise((resolve,reject)=>{cov_11bi64lr6x.f[2]++;cov_11bi64lr6x.s[10]++;return cloudinary.v2.uploader.upload(base64Image,function(err,data){cov_11bi64lr6x.f[3]++;cov_11bi64lr6x.s[11]++;if(err){cov_11bi64lr6x.b[1][0]++;cov_11bi64lr6x.s[12]++;return reject(err);}else{cov_11bi64lr6x.b[1][1]++;}cov_11bi64lr6x.s[13]++;cloudinary.url(data.url,// Transformation
{transformation:[{width:400,height:400,gravity:"face",radius:"max",crop:"crop"}]});cov_11bi64lr6x.s[14]++;resolve(data.url);});});});},/**
     * registerUser: save a new user in the data base
     * 
     * @param {string} name the name of the user
     * @param {string} surname the surname of the user
     * @param {string} username the username
     * @param {string} password the password for the user
     * @param {string} sex the sex of the user
     * @param {number} age age of the user
     * @param {string} city city of the user
     * @param {string} presentation presentation to be showed to the other users
     * @param {number} minAgePref looking for this minim age
     * @param {number} maxAgePref looking for this max age
     * 
     * @return no return
     * 
     */registerUser(name,surname,username,password,sex,age,city,presentation,minAgePref,maxAgePref){cov_11bi64lr6x.f[4]++;cov_11bi64lr6x.s[15]++;validate([{key:'name',value:name,type:String},{key:'surname',value:surname,type:String},{key:'username',value:username,type:String},{key:'password',value:password,type:String},{key:'sex',value:sex,type:String},{key:'age',value:age,type:Number},{key:'city',value:city,type:String},{key:'presentation',value:presentation,type:String},{key:'minAgePref',value:minAgePref,type:Number},{key:'maxAgePref',value:maxAgePref,type:Number}]);cov_11bi64lr6x.s[16]++;return(async()=>{cov_11bi64lr6x.f[5]++;let user=(cov_11bi64lr6x.s[17]++,await User.findOne({username}));cov_11bi64lr6x.s[18]++;if(user){cov_11bi64lr6x.b[2][0]++;cov_11bi64lr6x.s[19]++;throw new AlreadyExistsError(`username ${username} already registered`);}else{cov_11bi64lr6x.b[2][1]++;}let created=(cov_11bi64lr6x.s[20]++,Date.now());cov_11bi64lr6x.s[21]++;user=new User({name,surname,username,password,sex,age,city,presentation,minAgePref,maxAgePref,created});cov_11bi64lr6x.s[22]++;await user.save();})();},/**
     * authenticateUser: check username and password to authenticate the user
     * 
     * @param {string} username 
     * @param {string} password 
     * 
     * @returns the user id and token
     */authenticateUser(username,password){cov_11bi64lr6x.f[6]++;cov_11bi64lr6x.s[23]++;validate([{key:'username',value:username,type:String},{key:'password',value:password,type:String}]);cov_11bi64lr6x.s[24]++;return(async()=>{cov_11bi64lr6x.f[7]++;const user=(cov_11bi64lr6x.s[25]++,await User.findOne({username}));cov_11bi64lr6x.s[26]++;if((cov_11bi64lr6x.b[4][0]++,!user)||(cov_11bi64lr6x.b[4][1]++,user.password!==password)){cov_11bi64lr6x.b[3][0]++;cov_11bi64lr6x.s[27]++;throw new AuthError('invalid username or password');}else{cov_11bi64lr6x.b[3][1]++;}cov_11bi64lr6x.s[28]++;return user.id;})();},/**
     * retrieveUser: it get the user information
     * 
     * @param {string} id 
     * 
     * @returns: returns all the user parameters (no mongo stuff)
     * 
     */retrieveUser(id){cov_11bi64lr6x.f[8]++;cov_11bi64lr6x.s[29]++;validate([{key:'id',value:id,type:String}]);let user=(cov_11bi64lr6x.s[30]++,undefined);cov_11bi64lr6x.s[31]++;return(async()=>{cov_11bi64lr6x.f[9]++;cov_11bi64lr6x.s[32]++;try{cov_11bi64lr6x.s[33]++;user=await User.findById(id,{'_id':0,password:0,__v:0}).lean();}catch(error){}cov_11bi64lr6x.s[34]++;if(!user){cov_11bi64lr6x.b[5][0]++;cov_11bi64lr6x.s[35]++;throw new NotFoundError(`user with id ${id} not found`);}else{cov_11bi64lr6x.b[5][1]++;}cov_11bi64lr6x.s[36]++;user.id=id;cov_11bi64lr6x.s[37]++;return user;})();},/**
         * retrieveUserPhotos: it returns all the photos uploaded by the user in his profile
         * 
         * @param {string} id 
         * 
         * @returns {array} array with photos of the user
         * 
         */retrieveUserPhotos(id){cov_11bi64lr6x.f[10]++;cov_11bi64lr6x.s[38]++;validate([{key:'id',value:id,type:String}]);cov_11bi64lr6x.s[39]++;return(async()=>{cov_11bi64lr6x.f[11]++;const user=(cov_11bi64lr6x.s[40]++,await User.findById(id,{'_id':0,name:0,surname:0,username:0,password:0,created:0,sex:0,city:0,maxAgePref:0,age:0,minAgePref:0,presentation:0,__v:0,contacts:0}).lean());cov_11bi64lr6x.s[41]++;if(!user){cov_11bi64lr6x.b[6][0]++;cov_11bi64lr6x.s[42]++;throw new NotFoundError(`user with id ${id} not found`);}else{cov_11bi64lr6x.b[6][1]++;}cov_11bi64lr6x.s[43]++;return user;})();},/**
     * updateUser: this function is used by the user to change the parameters of his profile, photos not included
     * 
     * @param {string} id 
     * @param {string} name 
     * @param {string} surname 
     * @param {string} username 
     * @param {string} password 
     * @param {string} newPassword 
     * @param {string} newPassword2 
     * @param {string} sex 
     * @param {number} age 
     * @param {string} city 
     * @param {string} presentation 
     * @param {number} minAgePref 
     * @param {number} maxAgePref 
     * 
     * @returns nothing, this function doesn't return anything
     * 
     */updateUser(id,name,surname,username,password,newPassword,newPassword2,sex,age,city,presentation,minAgePref,maxAgePref){cov_11bi64lr6x.f[12]++;cov_11bi64lr6x.s[44]++;validate([{key:'id',value:id,type:String},{key:'name',value:name,type:String,optional:true},{key:'surname',value:surname,type:String,optional:true},{key:'username',value:username,type:String,optional:true},{key:'password',value:password,type:String},{key:'newPassword',value:newPassword,type:String,optional:true},{key:'newPassword2',value:newPassword2,type:String,optional:true},{key:'sex',value:sex,type:String,optional:true},{key:'age',value:age,type:Number,optional:true},{key:'city',value:city,type:String,optional:true},{key:'presentation',value:presentation,type:String,optional:true},{key:'minAgePref',value:minAgePref,type:Number,optional:true},{key:'maxAgePref',value:maxAgePref,type:Number,optional:true}]);cov_11bi64lr6x.s[45]++;return(async()=>{cov_11bi64lr6x.f[13]++;const user=(cov_11bi64lr6x.s[46]++,await User.findById(id));cov_11bi64lr6x.s[47]++;if(!user){cov_11bi64lr6x.b[7][0]++;cov_11bi64lr6x.s[48]++;throw new NotFoundError(`user with id ${id} not found`);}else{cov_11bi64lr6x.b[7][1]++;}cov_11bi64lr6x.s[49]++;if(user.password!==password){cov_11bi64lr6x.b[8][0]++;cov_11bi64lr6x.s[50]++;throw new AuthError('invalid password');}else{cov_11bi64lr6x.b[8][1]++;}cov_11bi64lr6x.s[51]++;if(newPassword!==newPassword2){cov_11bi64lr6x.b[9][0]++;cov_11bi64lr6x.s[52]++;throw new AuthError('the new password is incorrect');}else{cov_11bi64lr6x.b[9][1]++;}cov_11bi64lr6x.s[53]++;if((cov_11bi64lr6x.b[11][0]++,username)&&(cov_11bi64lr6x.b[11][1]++,username!==user.username)){cov_11bi64lr6x.b[10][0]++;const _user=(cov_11bi64lr6x.s[54]++,await User.findOne({username}));cov_11bi64lr6x.s[55]++;if(_user){cov_11bi64lr6x.b[12][0]++;cov_11bi64lr6x.s[56]++;throw new AlreadyExistsError(`username ${username} already exists`);}else{cov_11bi64lr6x.b[12][1]++;}cov_11bi64lr6x.s[57]++;(cov_11bi64lr6x.b[13][0]++,name!=null)&&(cov_11bi64lr6x.b[13][1]++,user.name=name);cov_11bi64lr6x.s[58]++;(cov_11bi64lr6x.b[14][0]++,surname!=null)&&(cov_11bi64lr6x.b[14][1]++,user.surname=surname);cov_11bi64lr6x.s[59]++;user.username=username;cov_11bi64lr6x.s[60]++;(cov_11bi64lr6x.b[15][0]++,newPassword!=null)&&(cov_11bi64lr6x.b[15][1]++,user.password=newPassword);cov_11bi64lr6x.s[61]++;(cov_11bi64lr6x.b[16][0]++,sex!=null)&&(cov_11bi64lr6x.b[16][1]++,user.sex=sex);cov_11bi64lr6x.s[62]++;(cov_11bi64lr6x.b[17][0]++,age!=null)&&(cov_11bi64lr6x.b[17][1]++,user.age=age);cov_11bi64lr6x.s[63]++;(cov_11bi64lr6x.b[18][0]++,city!=null)&&(cov_11bi64lr6x.b[18][1]++,user.city=city);cov_11bi64lr6x.s[64]++;(cov_11bi64lr6x.b[19][0]++,presentation!=null)&&(cov_11bi64lr6x.b[19][1]++,user.presentation=presentation);cov_11bi64lr6x.s[65]++;(cov_11bi64lr6x.b[20][0]++,minAgePref!=null)&&(cov_11bi64lr6x.b[20][1]++,user.minAgePref=minAgePref);cov_11bi64lr6x.s[66]++;(cov_11bi64lr6x.b[21][0]++,maxAgePref!=null)&&(cov_11bi64lr6x.b[21][1]++,user.maxAgePref=maxAgePref);cov_11bi64lr6x.s[67]++;await user.save();}else{cov_11bi64lr6x.b[10][1]++;cov_11bi64lr6x.s[68]++;(cov_11bi64lr6x.b[22][0]++,name!=null)&&(cov_11bi64lr6x.b[22][1]++,user.name=name);cov_11bi64lr6x.s[69]++;(cov_11bi64lr6x.b[23][0]++,surname!=null)&&(cov_11bi64lr6x.b[23][1]++,user.surname=surname);cov_11bi64lr6x.s[70]++;(cov_11bi64lr6x.b[24][0]++,newPassword!=null)&&(cov_11bi64lr6x.b[24][1]++,user.password=newPassword);cov_11bi64lr6x.s[71]++;(cov_11bi64lr6x.b[25][0]++,sex!=null)&&(cov_11bi64lr6x.b[25][1]++,user.sex=sex);cov_11bi64lr6x.s[72]++;(cov_11bi64lr6x.b[26][0]++,age!=null)&&(cov_11bi64lr6x.b[26][1]++,user.age=age);cov_11bi64lr6x.s[73]++;(cov_11bi64lr6x.b[27][0]++,city!=null)&&(cov_11bi64lr6x.b[27][1]++,user.city=city);cov_11bi64lr6x.s[74]++;(cov_11bi64lr6x.b[28][0]++,presentation!=null)&&(cov_11bi64lr6x.b[28][1]++,user.presentation=presentation);cov_11bi64lr6x.s[75]++;(cov_11bi64lr6x.b[29][0]++,minAgePref!=null)&&(cov_11bi64lr6x.b[29][1]++,user.minAgePref=minAgePref);cov_11bi64lr6x.s[76]++;(cov_11bi64lr6x.b[30][0]++,maxAgePref!=null)&&(cov_11bi64lr6x.b[30][1]++,user.maxAgePref=maxAgePref);cov_11bi64lr6x.s[77]++;await user.save();}})();},/**
     * addContact: add another person to the list of contacts of the user, 
     * it saves there the id of the user added
     * 
     * @param {string} id id of the user logged
     * @param {string} idContact id of the contact to add to the list
     * 
     * @returns anything
     */addContact(id,idContact){cov_11bi64lr6x.f[14]++;cov_11bi64lr6x.s[78]++;validate([{key:'id',value:id,type:String},{key:'idContact',value:idContact,type:String}]);cov_11bi64lr6x.s[79]++;return(async()=>{cov_11bi64lr6x.f[15]++;cov_11bi64lr6x.s[80]++;if(id===idContact){cov_11bi64lr6x.b[31][0]++;cov_11bi64lr6x.s[81]++;throw new NotAllowedError('user cannot add himself as a contact');}else{cov_11bi64lr6x.b[31][1]++;}const user=(cov_11bi64lr6x.s[82]++,await User.findById(id));cov_11bi64lr6x.s[83]++;if(!user){cov_11bi64lr6x.b[32][0]++;cov_11bi64lr6x.s[84]++;throw new NotFoundError(`user with id ${id} not found`);}else{cov_11bi64lr6x.b[32][1]++;}const newContact=(cov_11bi64lr6x.s[85]++,await User.findById(idContact));cov_11bi64lr6x.s[86]++;if(!newContact){cov_11bi64lr6x.b[33][0]++;cov_11bi64lr6x.s[87]++;throw new NotFoundError(`user with id ${idContact} not found`);}else{cov_11bi64lr6x.b[33][1]++;}cov_11bi64lr6x.s[88]++;user.contacts.forEach(_contactId=>{cov_11bi64lr6x.f[16]++;cov_11bi64lr6x.s[89]++;if(_contactId.toString()===newContact._id.toString()){cov_11bi64lr6x.b[34][0]++;cov_11bi64lr6x.s[90]++;throw new AlreadyExistsError(`user with id ${id} arleady has contact with id ${_contactId}`);}else{cov_11bi64lr6x.b[34][1]++;}});cov_11bi64lr6x.s[91]++;user.contacts.push(newContact._id);cov_11bi64lr6x.s[92]++;newContact.contacts.push(user._id);cov_11bi64lr6x.s[93]++;await user.save();cov_11bi64lr6x.s[94]++;await newContact.save();})();},/**
     * listContacts: this function is used to retrieve all the contacts of a user, all their id´s
     * 
     * @param {string} userId the id of the user logged
     * 
     * @returns {array} array of objects with id, name, presentation, photo1 of the contacts
     * 
     */listContacts(userId){cov_11bi64lr6x.f[17]++;cov_11bi64lr6x.s[95]++;validate([{key:'userId',value:userId,type:String}]);cov_11bi64lr6x.s[96]++;return(async()=>{cov_11bi64lr6x.f[18]++;let user=(cov_11bi64lr6x.s[97]++,undefined);cov_11bi64lr6x.s[98]++;try{cov_11bi64lr6x.s[99]++;user=await User.findById(userId);}catch(error){}cov_11bi64lr6x.s[100]++;if(!user){cov_11bi64lr6x.b[35][0]++;cov_11bi64lr6x.s[101]++;throw new NotFoundError(`user with id ${userId} not found`);}else{cov_11bi64lr6x.b[35][1]++;}const contacts=(cov_11bi64lr6x.s[102]++,await Promise.all(user.contacts.map(async contactId=>{cov_11bi64lr6x.f[19]++;cov_11bi64lr6x.s[103]++;return await User.findById(contactId);})));cov_11bi64lr6x.s[104]++;contacts.forEach((contact,index)=>{cov_11bi64lr6x.f[20]++;cov_11bi64lr6x.s[105]++;user.blocks.forEach(id=>{cov_11bi64lr6x.f[21]++;cov_11bi64lr6x.s[106]++;if(id===contact.id){cov_11bi64lr6x.b[36][0]++;cov_11bi64lr6x.s[107]++;contacts.splice(index,1);}else{cov_11bi64lr6x.b[36][1]++;}});cov_11bi64lr6x.s[108]++;contact.blockedBy.forEach(blockedBy=>{cov_11bi64lr6x.f[22]++;cov_11bi64lr6x.s[109]++;if(blockedBy===user.id){cov_11bi64lr6x.b[37][0]++;cov_11bi64lr6x.s[110]++;contacts.splice(index,1);}else{cov_11bi64lr6x.b[37][1]++;}});});cov_11bi64lr6x.s[111]++;return contacts.map(({id,name,presentation,photo1})=>{cov_11bi64lr6x.f[23]++;cov_11bi64lr6x.s[112]++;return{id,name,presentation,photo1};});})();},/**
     * addMessage: creates a new Message with the author, the destinatary and the text of the message, 
     * with the date of creation too, and saves it in the data base
     * 
     * @param {string} user id of the user logged
     * @param {string} sentTo id of the contact to send a message
     * @param {string} text text of the message
     * 
     * @returns nothing
     */addMessage(user,sentTo,text){cov_11bi64lr6x.f[24]++;cov_11bi64lr6x.s[113]++;validate([{key:'user',value:user,type:String},{key:'sentTo',value:sentTo,type:String},{key:'text',value:text,type:String}]);cov_11bi64lr6x.s[114]++;return(async()=>{cov_11bi64lr6x.f[25]++;let _user=(cov_11bi64lr6x.s[115]++,undefined);let user2=(cov_11bi64lr6x.s[116]++,undefined);cov_11bi64lr6x.s[117]++;try{cov_11bi64lr6x.s[118]++;_user=await User.findById(user);}catch(error){}cov_11bi64lr6x.s[119]++;if(!_user){cov_11bi64lr6x.b[38][0]++;cov_11bi64lr6x.s[120]++;throw new NotFoundError(`user with id ${user} not found`);}else{cov_11bi64lr6x.b[38][1]++;}cov_11bi64lr6x.s[121]++;try{cov_11bi64lr6x.s[122]++;user2=await User.findById(sentTo);}catch(error){}cov_11bi64lr6x.s[123]++;if(!user2){cov_11bi64lr6x.b[39][0]++;cov_11bi64lr6x.s[124]++;throw new NotFoundError(`user with id ${sentTo} not found`);}else{cov_11bi64lr6x.b[39][1]++;}cov_11bi64lr6x.s[125]++;if(!_user.contacts.includes(user2.id).toString()){cov_11bi64lr6x.b[40][0]++;cov_11bi64lr6x.s[126]++;throw new NotFoundError(`user with id ${sentTo} is not a contact of user with id ${user}`);}else{cov_11bi64lr6x.b[40][1]++;}let sentDate=(cov_11bi64lr6x.s[127]++,Date.now());cov_11bi64lr6x.s[128]++;message=new Message({text,user,nameUser:_user.name,sentTo,nameSentTo:user2.name,sentDate});cov_11bi64lr6x.s[129]++;await message.save();})();},/**
     * retrieveMessages: it search a conversation between two users, all the messages, and order them
     * by date. If the the last message is pending and the user is who is sended than message, pass it 
     * to readed
     *
     * @param {string} user1 id jof the user logged
     * @param {string} user2 id of the contact
     * 
     * @returns {array} array of objects with id, nameSentTo, nameUser, text, user
     */retrieveMessages(user1,user2){cov_11bi64lr6x.f[26]++;cov_11bi64lr6x.s[130]++;validate([{key:'user1',value:user1,type:String},{key:'user2',value:user2,type:String}]);cov_11bi64lr6x.s[131]++;return(async()=>{cov_11bi64lr6x.f[27]++;const _user1=(cov_11bi64lr6x.s[132]++,await User.findById(user1));cov_11bi64lr6x.s[133]++;if(!_user1){cov_11bi64lr6x.b[41][0]++;cov_11bi64lr6x.s[134]++;throw new NotFoundError(`user1 with id ${user1} not found`);}else{cov_11bi64lr6x.b[41][1]++;}const _user2=(cov_11bi64lr6x.s[135]++,await User.findById(user2));cov_11bi64lr6x.s[136]++;if(!_user2){cov_11bi64lr6x.b[42][0]++;cov_11bi64lr6x.s[137]++;throw new NotFoundError(`user with id ${user2} not found`);}else{cov_11bi64lr6x.b[42][1]++;}cov_11bi64lr6x.s[138]++;if(!_user1.contacts.includes(_user2.id).toString()){cov_11bi64lr6x.b[43][0]++;cov_11bi64lr6x.s[139]++;throw new NotFoundError(`user with id ${user2} is not a contact of user with id ${user1}`);}else{cov_11bi64lr6x.b[43][1]++;}var ObjectId=(cov_11bi64lr6x.s[140]++,mongoose.Types.ObjectId);let messages=(cov_11bi64lr6x.s[141]++,await Message.find({$or:[{user:new ObjectId(user1),sentTo:new ObjectId(user2)},{user:new ObjectId(user2),sentTo:new ObjectId(user1)}]}));cov_11bi64lr6x.s[142]++;messages.sort(function(a,b){cov_11bi64lr6x.f[28]++;cov_11bi64lr6x.s[143]++;return a.sentDate-b.sentDate;});cov_11bi64lr6x.s[144]++;if(messages.length>0){cov_11bi64lr6x.b[44][0]++;cov_11bi64lr6x.s[145]++;if((cov_11bi64lr6x.b[46][0]++,messages[messages.length-1].status==='PENDING')&&(cov_11bi64lr6x.b[46][1]++,messages[messages.length-1].user.toString()===user2)){cov_11bi64lr6x.b[45][0]++;let message=(cov_11bi64lr6x.s[146]++,await Message.findById(messages[messages.length-1].id.toString()));// if (messages.length > 1) {
//     let message2 = await Message.findById(messages[messages.length - 2].id.toString())
cov_11bi64lr6x.s[147]++;message.status='READED';//     message2.status = 'RESPONDED'
cov_11bi64lr6x.s[148]++;await message.save();//     await message2.save()
// }
}else{cov_11bi64lr6x.b[45][1]++;}}else{cov_11bi64lr6x.b[44][1]++;}cov_11bi64lr6x.s[149]++;if(messages.length>0){cov_11bi64lr6x.b[47][0]++;cov_11bi64lr6x.s[150]++;return messages.map(({id,nameSentTo,nameUser,text,user})=>{cov_11bi64lr6x.f[29]++;cov_11bi64lr6x.s[151]++;return{id,nameSentTo,nameUser,text,user};});}else{cov_11bi64lr6x.b[47][1]++;cov_11bi64lr6x.s[152]++;return[];}})();},/**
     * checkMessages: it is used when we need the list of messages but we don´t want to change anything of them
     * 
     * @param {string} user1 id of the user logged
     * @param {string} user2 id of the contact
     * 
     * @returns {array} array of objects with id, nameSentTo, nameUser, text, user
     */checkMessages(user1,user2){cov_11bi64lr6x.f[30]++;cov_11bi64lr6x.s[153]++;validate([{key:'user1',value:user1,type:String},{key:'user2',value:user2,type:String}]);cov_11bi64lr6x.s[154]++;return(async()=>{cov_11bi64lr6x.f[31]++;const _user1=(cov_11bi64lr6x.s[155]++,await User.findById(user1));cov_11bi64lr6x.s[156]++;if(!_user1){cov_11bi64lr6x.b[48][0]++;cov_11bi64lr6x.s[157]++;throw new NotFoundError(`user1 with id ${user1} not found`);}else{cov_11bi64lr6x.b[48][1]++;}const _user2=(cov_11bi64lr6x.s[158]++,await User.findById(user2));cov_11bi64lr6x.s[159]++;if(!_user2){cov_11bi64lr6x.b[49][0]++;cov_11bi64lr6x.s[160]++;throw new NotFoundError(`user with id ${user2} not found`);}else{cov_11bi64lr6x.b[49][1]++;}cov_11bi64lr6x.s[161]++;if(!_user1.contacts.includes(_user2.id).toString()){cov_11bi64lr6x.b[50][0]++;cov_11bi64lr6x.s[162]++;throw new NotFoundError(`user with id ${user2} is not a contact of user with id ${user1}`);}else{cov_11bi64lr6x.b[50][1]++;}var ObjectId=(cov_11bi64lr6x.s[163]++,mongoose.Types.ObjectId);let messages=(cov_11bi64lr6x.s[164]++,await Message.find({$or:[{user:new ObjectId(user1),sentTo:new ObjectId(user2)},{user:new ObjectId(user2),sentTo:new ObjectId(user1)}]}));cov_11bi64lr6x.s[165]++;messages.sort(function(a,b){cov_11bi64lr6x.f[32]++;cov_11bi64lr6x.s[166]++;return a.sentDate-b.sentDate;});cov_11bi64lr6x.s[167]++;if(messages.length>0){cov_11bi64lr6x.b[51][0]++;cov_11bi64lr6x.s[168]++;return messages.map(({id,nameSentTo,nameUser,text,user})=>{cov_11bi64lr6x.f[33]++;cov_11bi64lr6x.s[169]++;return{id,nameSentTo,nameUser,text,user};});}else{cov_11bi64lr6x.b[51][1]++;cov_11bi64lr6x.s[170]++;return[];}})();},/**
     * checkNewMessages: it check if a user have new messages and from who
     * 
     * @param {string} user the id of the user
     * 
     * @returns {array} an array of id of the contacts with messages for the user. Messages with the status
     * pending only.
     * 
     */checkNewMessages(user){cov_11bi64lr6x.f[34]++;cov_11bi64lr6x.s[171]++;validate([{key:'user',value:user,type:String}]);cov_11bi64lr6x.s[172]++;return(async()=>{cov_11bi64lr6x.f[35]++;const _user=(cov_11bi64lr6x.s[173]++,await User.findById(user));cov_11bi64lr6x.s[174]++;if(!_user){cov_11bi64lr6x.b[52][0]++;cov_11bi64lr6x.s[175]++;throw new NotFoundError(`user1 with id ${user} not found`);}else{cov_11bi64lr6x.b[52][1]++;}const messages=(cov_11bi64lr6x.s[176]++,await Message.find({sentTo:user,status:'PENDING'}).lean());let contacts=(cov_11bi64lr6x.s[177]++,[]);cov_11bi64lr6x.s[178]++;messages.forEach(message=>{cov_11bi64lr6x.f[36]++;let flag=(cov_11bi64lr6x.s[179]++,false);cov_11bi64lr6x.s[180]++;id=message.user._id.toString();cov_11bi64lr6x.s[181]++;_user.blocks.forEach(userBlocked=>{cov_11bi64lr6x.f[37]++;cov_11bi64lr6x.s[182]++;if(id===userBlocked){cov_11bi64lr6x.b[53][0]++;cov_11bi64lr6x.s[183]++;flag=true;}else{cov_11bi64lr6x.b[53][1]++;}});cov_11bi64lr6x.s[184]++;_user.blockedBy.forEach(userBlockedBy=>{cov_11bi64lr6x.f[38]++;cov_11bi64lr6x.s[185]++;if(id===userBlockedBy){cov_11bi64lr6x.b[54][0]++;cov_11bi64lr6x.s[186]++;flag=true;}else{cov_11bi64lr6x.b[54][1]++;}});cov_11bi64lr6x.s[187]++;if(flag!=true){cov_11bi64lr6x.b[55][0]++;cov_11bi64lr6x.s[188]++;contacts.push(id);}else{cov_11bi64lr6x.b[55][1]++;}});cov_11bi64lr6x.s[189]++;return contacts;})();},/**
     * listCandidates: it returns a list of persons who are of the sex, city and range of age choosen by
     * the user, to show him their names and presentations.
     * 
     * @param {string} user id of the user logged
     * 
     * @returns {array} of candidates whit their id, name and presentation
     */listCandidates(user){cov_11bi64lr6x.f[39]++;cov_11bi64lr6x.s[190]++;validate([{key:'user',value:user,type:String}]);const candidatesFiltered=(cov_11bi64lr6x.s[191]++,[]);let flag=(cov_11bi64lr6x.s[192]++,false);cov_11bi64lr6x.s[193]++;return(async()=>{cov_11bi64lr6x.f[40]++;const _user=(cov_11bi64lr6x.s[194]++,await User.findById(user));cov_11bi64lr6x.s[195]++;if(!_user){cov_11bi64lr6x.b[56][0]++;cov_11bi64lr6x.s[196]++;throw new NotFoundError(`user with id ${user} not found`);}else{cov_11bi64lr6x.b[56][1]++;}let sexSearch=(cov_11bi64lr6x.s[197]++,'');cov_11bi64lr6x.s[198]++;if(_user.sex==='MALE'){cov_11bi64lr6x.b[57][0]++;cov_11bi64lr6x.s[199]++;sexSearch='FEMALE';}else{cov_11bi64lr6x.b[57][1]++;cov_11bi64lr6x.s[200]++;sexSearch='MALE';}let city=(cov_11bi64lr6x.s[201]++,_user.city);const contacts=(cov_11bi64lr6x.s[202]++,_user.contacts);let candidates=(cov_11bi64lr6x.s[203]++,await User.find({sex:sexSearch,age:{$gte:_user.minAgePref,$lte:_user.maxAgePref},city:city}).lean());cov_11bi64lr6x.s[204]++;candidates.forEach(candidate=>{cov_11bi64lr6x.f[41]++;cov_11bi64lr6x.s[205]++;contacts.forEach(contact=>{cov_11bi64lr6x.f[42]++;cov_11bi64lr6x.s[206]++;if(candidate._id.toString()===contact._id.toString()){cov_11bi64lr6x.b[58][0]++;cov_11bi64lr6x.s[207]++;flag=true;}else{cov_11bi64lr6x.b[58][1]++;}});cov_11bi64lr6x.s[208]++;if(flag===true){cov_11bi64lr6x.b[59][0]++;cov_11bi64lr6x.s[209]++;flag=false;}else{cov_11bi64lr6x.b[59][1]++;cov_11bi64lr6x.s[210]++;candidatesFiltered.push(candidate);cov_11bi64lr6x.s[211]++;flag=false;}});cov_11bi64lr6x.s[212]++;candidatesFiltered.sort(function(a,b){cov_11bi64lr6x.f[43]++;cov_11bi64lr6x.s[213]++;return a.created-b.created;});cov_11bi64lr6x.s[214]++;candidatesFiltered.forEach(candidate=>{cov_11bi64lr6x.f[44]++;cov_11bi64lr6x.s[215]++;candidate.id=candidate._id.toString();cov_11bi64lr6x.s[216]++;delete candidate.__v;cov_11bi64lr6x.s[217]++;delete candidate._id;cov_11bi64lr6x.s[218]++;delete candidate.contacts;cov_11bi64lr6x.s[219]++;delete candidate.city;cov_11bi64lr6x.s[220]++;delete candidate.created;cov_11bi64lr6x.s[221]++;delete candidate.surname;cov_11bi64lr6x.s[222]++;delete candidate.username;cov_11bi64lr6x.s[223]++;delete candidate.password;cov_11bi64lr6x.s[224]++;delete candidate.sex;cov_11bi64lr6x.s[225]++;delete candidate.age;cov_11bi64lr6x.s[226]++;delete candidate.maxAgePref;cov_11bi64lr6x.s[227]++;delete candidate.minAgePref;cov_11bi64lr6x.s[228]++;delete candidate.photo1;cov_11bi64lr6x.s[229]++;delete candidate.photo2;cov_11bi64lr6x.s[230]++;delete candidate.photo3;});cov_11bi64lr6x.s[231]++;if(candidatesFiltered.length>0){cov_11bi64lr6x.b[60][0]++;cov_11bi64lr6x.s[232]++;return candidatesFiltered;}else{cov_11bi64lr6x.b[60][1]++;cov_11bi64lr6x.s[233]++;return false;}})();},/**
     * insertPhoto: it saves a photo in the profile of a user
     * 
     * @param {string} id id of the user logged
     * @param {string} chunk base64Image 
     * @param {string} photo string to identificate which of the tree photos of the profile we want to save
     */insertPhoto(id,chunk,photo){cov_11bi64lr6x.f[45]++;cov_11bi64lr6x.s[234]++;validate([{key:'id',value:id,type:String},{key:'chunk',value:chunk,type:String},{key:'photo',value:photo,type:String}]);cov_11bi64lr6x.s[235]++;return(async()=>{cov_11bi64lr6x.f[46]++;const user=(cov_11bi64lr6x.s[236]++,await User.findById(id));cov_11bi64lr6x.s[237]++;if(!user){cov_11bi64lr6x.b[61][0]++;cov_11bi64lr6x.s[238]++;throw new NotFoundError(`user with id ${id} not found`);}else{cov_11bi64lr6x.b[61][1]++;}const imageCloudinary=(cov_11bi64lr6x.s[239]++,await this._saveImage(chunk));cov_11bi64lr6x.s[240]++;if(photo==='photo1'){cov_11bi64lr6x.b[62][0]++;cov_11bi64lr6x.s[241]++;user.photo1=imageCloudinary;}else{cov_11bi64lr6x.b[62][1]++;cov_11bi64lr6x.s[242]++;if(photo==='photo2'){cov_11bi64lr6x.b[63][0]++;cov_11bi64lr6x.s[243]++;user.photo2=imageCloudinary;}else{cov_11bi64lr6x.b[63][1]++;cov_11bi64lr6x.s[244]++;user.photo3=imageCloudinary;}}cov_11bi64lr6x.s[245]++;await user.save();cov_11bi64lr6x.s[246]++;return imageCloudinary;})();},/**
     * blockUser: it add the contact id to the list of blocked users of the user logged, and to the list
     * of blockedBy of the contact
     * 
     * @param {string} user1 id of the user logged
     * @param {string} user2 id of the user to block
     * 
     * @returns anything
     */blockUser(user1,user2){cov_11bi64lr6x.f[47]++;cov_11bi64lr6x.s[247]++;validate([{key:'user1',value:user1,type:String},{key:'user2',value:user2,type:String}]);cov_11bi64lr6x.s[248]++;return(async()=>{cov_11bi64lr6x.f[48]++;cov_11bi64lr6x.s[249]++;if(user1===user2){cov_11bi64lr6x.b[64][0]++;cov_11bi64lr6x.s[250]++;throw new NotAllowedError('user cannot add himself as a blocked');}else{cov_11bi64lr6x.b[64][1]++;}const user=(cov_11bi64lr6x.s[251]++,await User.findById(user1));cov_11bi64lr6x.s[252]++;if(!user){cov_11bi64lr6x.b[65][0]++;cov_11bi64lr6x.s[253]++;throw new NotFoundError(`user with id ${user1} not found`);}else{cov_11bi64lr6x.b[65][1]++;}const contactBlocked=(cov_11bi64lr6x.s[254]++,await User.findById(user2));cov_11bi64lr6x.s[255]++;if(!contactBlocked){cov_11bi64lr6x.b[66][0]++;cov_11bi64lr6x.s[256]++;throw new NotFoundError(`user with id ${user2} not found`);}else{cov_11bi64lr6x.b[66][1]++;}cov_11bi64lr6x.s[257]++;user.blocks.forEach(idBlocked=>{cov_11bi64lr6x.f[49]++;cov_11bi64lr6x.s[258]++;if(idBlocked===user2){cov_11bi64lr6x.b[67][0]++;cov_11bi64lr6x.s[259]++;throw new AlreadyExistsError(`user with id ${user2} arleady blocked by ${user1}`);}else{cov_11bi64lr6x.b[67][1]++;}});cov_11bi64lr6x.s[260]++;user.blocks.push(user2);cov_11bi64lr6x.s[261]++;contactBlocked.blockedBy.push(user1);cov_11bi64lr6x.s[262]++;await user.save();cov_11bi64lr6x.s[263]++;await contactBlocked.save();})();}});cov_11bi64lr6x.s[264]++;module.exports=logic;